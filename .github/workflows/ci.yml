name: Mono CI

on:
    push:
        branches: [ main, master ]
    pull_request:
        branches: [ main, master ]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        container:
            image: mono:6.12.0.182   # includes msbuild; don't apt-get inside
        
        steps:
            - uses: actions/checkout@v4

            - name: Show tool versions
              run: |
                  mono --version
                  msbuild /version

            - name: Download nuget.exe
              run: |
                  mkdir -p tools
                  curl -sSL https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -o tools/nuget.exe
                  mono tools/nuget.exe help | head -n 1

            - name: Cache NuGet
              uses: actions/cache@v4
              with:
                  path: |
                      packages
                      /root/.nuget/packages
                  key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.config', '**/*.csproj', '**/*.sln') }}
                  restore-keys: |
                      ${{ runner.os }}-nuget-

            - name: Restore packages
              run: mono tools/nuget.exe restore OrbitPOInts.sln -NonInteractive

            - name: Ensure NUnit console
              run: mono tools/nuget.exe install NUnit.ConsoleRunner -Version 3.16.3 -OutputDirectory packages

            - name: Build
              env:
                  CONFIG: Test
              run: msbuild OrbitPOInts.sln /p:Configuration=${CONFIG} /verbosity:minimal

            - name: Test
              env:
                  CONFIG: Test
              run: mono ./packages/NUnit.ConsoleRunner.3.16.3/tools/nunit3-console.exe --result="TestResult.xml;format=nunit3" "./OrbitPOInts.Tests/bin/${CONFIG}/OrbitPOInts.Tests.dll"

    
            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: nunit-results
                  path: TestResult.xml
